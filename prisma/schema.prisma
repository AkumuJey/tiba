// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model SuperUser {
  id        Int      @id @unique @default(autoincrement())
  createdAt DateTime @default(now())
  firstName String
  lastName  String
  email     String
  password  String   @unique
  phoneNo   String
}

model HealthcareProvider {
  id             Int              @id @unique @default(autoincrement())
  createdAt      DateTime         @default(now())
  firstName      String
  lastName       String
  title          String
  email          String
  password       String           @unique
  phoneNo        String
  age            Int?
  verified       Boolean?         @default(false)
  subscribed     Boolean?         @default(false)
  Appointments   Appointments[]
  Prescription   Prescription[]
  MedicalHistory MedicalHistory[]
  HospitalVitals HospitalVitals[]
  HospitalLabs   HospitalLabs[]

  @@map("healthcare_provider")
}

model Patient {
  id                    Int              @id @unique @default(autoincrement())
  createdAt             DateTime         @default(now())
  firstName             String
  lastName              String
  dateOfBirth           DateTime         @db.Date
  sex                   String
  address               String?
  email                 String           @unique
  password              String
  phoneNumber           String           @unique
  emergencyContactName  String?
  emergencyContactPhone String?
  subscribed            Boolean?         @default(false)
  Appointments          Appointments[]
  Prescription          Prescription[]
  MedicalHistory        MedicalHistory[]
  HospitalVitals        HospitalVitals[]
  HomeVitals            HomeVitals[]
  HomeLabs              HomeLabs[]
  HospitalLabs          HospitalLabs[]

  @@map("patient") // Maps the model to the table name in the database
}

model Appointments {
  id                 Int                @id @unique @default(autoincrement())
  createdAt          DateTime           @default(now())
  patientID          Int
  healthProviderID   Int
  venue              String
  appointmentTime    DateTime
  amount             Float
  description        String?
  patient            Patient            @relation(fields: [patientID], references: [id])
  healthcareProvider HealthcareProvider @relation(fields: [healthProviderID], references: [id])

  @@map("appointments")
}

model MedicalHistory {
  id                  Int                @id @unique @default(autoincrement())
  createdAt           DateTime           @default(now())
  patientID           Int
  presentation        String
  medicalHistory      String
  physicalExamination String
  Summary             String
  healthProviderID    Int
  healthcareProvider  HealthcareProvider @relation(fields: [healthProviderID], references: [id])
  patient             Patient            @relation(fields: [patientID], references: [id])
  HospitalVitals      HospitalVitals[]
  HospitalLabs        HospitalLabs[]

  @@map("medical_history")
}

model HospitalVitals {
  id                 Int                @id @unique @default(autoincrement())
  createdAt          DateTime           @default(now())
  patientID          Int
  healthProviderID   Int
  medicalHistoryID   Int
  breathingRate      Int
  systolicBP         Int
  diastolicBP        Int
  pulseRate          Int
  weightKg           Float
  healthcareProvider HealthcareProvider @relation(fields: [healthProviderID], references: [id])
  patient            Patient            @relation(fields: [patientID], references: [id])
  medicalHistory     MedicalHistory     @relation(fields: [medicalHistoryID], references: [id])

  @@map("hospital_vitals")
}

model HomeVitals {
  id               Int      @id @unique @default(autoincrement())
  createdAt        DateTime @default(now())
  patientID        Int
  healthProviderID Int
  breathingRate    Int
  systolicBP       Int
  diastolicBP      Int
  pulseRate        Int
  weightKg         Float
  patient          Patient  @relation(fields: [patientID], references: [id])

  @@map("home_vitals")
}

model HospitalLabs {
  id                 Int                @id @unique @default(autoincrement())
  createdAt          DateTime           @default(now())
  patientID          Int
  healthProviderID   Int
  medicalHistoryID   Int
  bloodSugar         Float
  cholesterol        Float
  LDL                Float
  HDL                Float
  triglceride        Float
  findings           String
  labName            String
  patient            Patient            @relation(fields: [patientID], references: [id])
  healthcareProvider HealthcareProvider @relation(fields: [healthProviderID], references: [id])
  medicalHistory     MedicalHistory     @relation(fields: [medicalHistoryID], references: [id])

  @@map("hospital_labs")
}

model HomeLabs {
  id          Int      @id @unique @default(autoincrement())
  createdAt   DateTime @default(now())
  patientID   Int
  bloodSugar  Float
  cholesterol Float
  LDL         Float
  HDL         Float
  triglceride Float
  findings    String
  labName     String
  patient     Patient  @relation(fields: [patientID], references: [id])

  @@map("home_labs")
}

model Prescription {
  id                   Int                @id @unique @default(autoincrement())
  createdAt            DateTime           @default(now())
  patientID            Int
  healthcareProviderID Int
  dosage               String
  date                 DateTime           @db.Date
  instruction          String?
  patient              Patient            @relation(fields: [patientID], references: [id])
  healthcareProvider   HealthcareProvider @relation(fields: [healthcareProviderID], references: [id])

  prescriptionDetails PrescriptionDetail[]

  @@map("prescription")
}

model PrescriptionDetail {
  id             Int          @id @unique
  createdAt      DateTime     @default(now())
  prescriptionID Int
  drugID         Int
  quantity       Int
  units          String
  route          String
  drugName       String
  durationInDays Int
  prescription   Prescription @relation(fields: [prescriptionID], references: [id])

  @@map("prescription_detail")
}
